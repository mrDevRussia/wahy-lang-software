import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Plus, Copy } from "lucide-react";

interface WahyCommandsPanelProps {
  onInsertCommand: (command: string) => void;
}

export function WahyCommandsPanel({ onInsertCommand }: WahyCommandsPanelProps) {
  const commands = [
    { name: "ุงูุชุญ ุตูุญุฉ", example: 'ุงูุชุญ "ุนููุงู ุงูุตูุญุฉ"', category: "ุตูุญุฉ" },
    { name: "ุฃุบูู ุตูุญุฉ", example: "ุฃุบูู", category: "ุตูุญุฉ" },
    { name: "ุนููุงู", example: 'ุนููุงู "ุงููุต"', category: "ูุญุชูู" },
    { name: "ุนููุงู ูุฑุนู", example: 'ุนููุงู_ูุฑุนู "ุงููุต"', category: "ูุญุชูู" },
    { name: "ููุฑุฉ", example: 'ููุฑุฉ "ุงููุต"', category: "ูุญุชูู" },
    { name: "ุฑุงุจุท", example: 'ุฑุงุจุท "ุงููุต" "ุงูุฑุงุจุท"', category: "ูุญุชูู" },
    { name: "ุตูุฑุฉ", example: 'ุตูุฑุฉ "ุงูุฑุงุจุท" "ุงููุตู"', category: "ูุญุชูู" },
    { name: "ุฒุฑ", example: 'ุฒุฑ "ุงููุต" "primary"', category: "ุชูุงุนู" },
    { name: "ุญูู ุฅุฏุฎุงู", example: 'ุญูู_ุฅุฏุฎุงู "ุงููุต" "text"', category: "ุชูุงุนู" },
    { name: "ุชูุจูู", example: 'ุชูุจูู "ุงููุต" "success"', category: "ุชูุงุนู" },
    { name: "ุจุทุงูุฉ", example: 'ุจุทุงูุฉ "ุงูุนููุงู" "ุงููุญุชูู"', category: "ุชูุงุนู" },
    { name: "ุนุฏุงุฏ", example: 'ุนุฏุงุฏ 0 "ุงูุชุณููุฉ"', category: "ุชูุงุนู" },
    { name: "ุงุจุฏุฃ ูุงุฆูุฉ", example: "ุงุจุฏุฃ_ูุงุฆูุฉ", category: "ููุงุฆู" },
    { name: "ุนูุตุฑ", example: 'ุนูุตุฑ "ุงููุต"', category: "ููุงุฆู" },
    { name: "ุฃููู ูุงุฆูุฉ", example: "ุฃููู_ูุงุฆูุฉ", category: "ููุงุฆู" },
    { name: "ุฎุท ูุงุตู", example: "ุฎุท_ูุงุตู", category: "ุชุฎุทูุท" },
    { name: "ูุณุงูุฉ", example: "ูุณุงูุฉ", category: "ุชุฎุทูุท" },
    { name: "ููู ุงูุฎูููุฉ", example: 'ููู_ุงูุฎูููุฉ "lightblue"', category: "ุชูุณูู" },
    { name: "ููู ุงููุต", example: 'ููู_ุงููุต "darkblue"', category: "ุชูุณูู" }
  ];

  const buttonTypes = ["primary", "success", "danger", "warning", "info"];
  const alertTypes = ["info", "success", "warning", "danger"];

  const insertCommand = (command: string) => {
    onInsertCommand(command + '\n');
  };

  return (
    <div className="w-72 bg-white border-l border-gray-200 h-full overflow-y-auto">
      <div className="p-4 border-b border-gray-200">
        <h2 className="text-lg font-bold text-gray-800 mb-2">๐ช ุฃูุงูุฑ ูุบุฉ ููุญู</h2>
        <p className="text-sm text-gray-600">ุงุถุบุท + ูุฅุถุงูุฉ ุงูุฃูุฑ</p>
      </div>
      
      <div className="p-4 space-y-4">
        {["ุตูุญุฉ", "ูุญุชูู", "ุชูุงุนู", "ููุงุฆู", "ุชุฎุทูุท", "ุชูุณูู"].map(category => (
          <Card key={category} className="border border-gray-200">
            <CardHeader className="pb-2">
              <CardTitle className="text-sm">{category}</CardTitle>
            </CardHeader>
            <CardContent className="pt-0">
              <div className="space-y-2">
                {commands
                  .filter(cmd => cmd.category === category)
                  .map((command) => (
                    <div key={command.name} className="flex items-center justify-between p-2 border rounded hover:bg-gray-50">
                      <div>
                        <div className="text-sm font-medium">{command.name}</div>
                        <code className="text-xs text-gray-600 bg-gray-100 px-1 rounded">
                          {command.example}
                        </code>
                      </div>
                      <Button
                        size="sm"
                        variant="ghost"
                        className="h-6 w-6 p-0"
                        onClick={() => insertCommand(command.example)}
                      >
                        <Plus className="h-3 w-3" />
                      </Button>
                    </div>
                  ))}
              </div>
            </CardContent>
          </Card>
        ))}
        
        {/* ุฃููุงุน ุงูุฃุฒุฑุงุฑ */}
        <Card className="border border-gray-200">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm">ุฃููุงุน ุงูุฃุฒุฑุงุฑ</CardTitle>
          </CardHeader>
          <CardContent className="pt-0">
            <div className="flex flex-wrap gap-1">
              {buttonTypes.map(type => (
                <Badge key={type} variant="outline" className="text-xs">
                  {type}
                </Badge>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* ุฃููุงุน ุงูุชูุจููุงุช */}
        <Card className="border border-gray-200">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm">ุฃููุงุน ุงูุชูุจููุงุช</CardTitle>
          </CardHeader>
          <CardContent className="pt-0">
            <div className="flex flex-wrap gap-1">
              {alertTypes.map(type => (
                <Badge key={type} variant="outline" className="text-xs">
                  {type}
                </Badge>
              ))}
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}